/* 
   NPL Gradle file

   https://github.com/jomifred/npl
   
*/

plugins {
  id "ca.coglinc.javacc" version "2.3.1"
  // see https://github.com/johnmartel/javaccPlugin
}

defaultTasks 'jar'

apply plugin: 'java'
apply plugin: 'eclipse'

version 0.2

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    
    maven {
        url "http://jacamo.sourceforge.net/maven2"
    }
    
    /*flatDir {
	   dirs 'lib'
    }*/
}

configurations {
    umljavadoc
    // see http://www.umlgraph.org/doc/indexw.html#ClassCastException
}


dependencies {
    //compile group: 'net.sf.jason', name: 'jason', version: '1.4.2'
    //compile group: 'jason', name: 'jason', version: '2.+'
    compile group: 'net.sf.jason', name: 'jason', version: '2.+'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
    
    umljavadoc 'org.umlgraph:umlgraph:5.6'
}

jar {
    baseName 'npl'
}

task javadoc(overwrite: true, dependsOn: compileJava) {
    setDescription('Generates Javadoc API documentation with UMLGraph diagrams')
    setGroup(JavaBasePlugin.DOCUMENTATION_GROUP)

    doLast {
        ant.javadoc(classpath: (configurations.runtime + configurations.compile).asPath, 
                    sourcepath: file('src/main/java'), 
                    packagenames: '*',
                    destdir: "${docsDir}/../../doc/api",
                    private: 'true',
                    docletpath: configurations.umljavadoc.asPath) {
            doclet(name: 'org.umlgraph.doclet.UmlGraphDoc') {
                param(name: '-inferrel')
                param(name: '-inferdep')
                param(name: '-qualify')
                //param(name: '-T', value: 'svg')
                param(name: '-postfixpackage')
                param(name: '-hide', value: 'java.*')
                //param(name: '-collpackages', value: 'java.util.*')
                //param(name: '-nodefontsize', value: '9')
                //param(name: '-nodefontpackagesize', value: '7')
                //param(name: '-link', value: 'http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec')
                //param(name: '-link', value: 'http://java.sun.com/j2se/1.5/docs/api')
            }
        }
    }
}

compileJavacc {
    inputDirectory = file('src/main/javacc')
    outputDirectory = file(project.buildDir.absolutePath + '/generated/javacc/npl/parser')
}


jjdoc {
    outputDirectory = file(project.projectDir.absolutePath + '/doc')
    //arguments = [text: 'true']
}

task release(dependsOn: [ 'build', 'jjdoc', 'javadoc', 'zipRel'])  {
    setDescription('Builds the distribution and documentation')
    setGroup(JavaBasePlugin.BUILD_TASK_NAME)
} 

task copyRel {
    copy {
        from '.'      
        into 'build/npl-'+project.version 
        include '*.md'
    }
    copy {
        from 'build/libs'      
        from 'lib'  
        into 'build/npl-'+project.version+'/lib' 
        include '**/*.jar'
    }
    copy {
        from 'doc'      
        into 'build/npl-'+project.version+'/doc' 
    }
    copy {
        from 'examples'      
        into 'build/npl-'+project.version+'/examples' 
    }
}

task zipRel(type: Zip, dependsOn: copyRel) {
    from 'build/npl-'+project.version
    baseName 'npl'
}
